{"version":3,"sources":["components/Pagination/Pagination.tsx","App.tsx","utils.ts","index.tsx"],"names":["Pagination","total","perPage","currentPage","onPageChange","totalPages","Math","ceil","firstPage","lastPage","pageNumbers","Array","from","length","_","index","className","href","onClick","map","pageNumber","items","to","numbers","n","push","getNumbers","App","useState","setCurrentPage","itemsPerPage","setItemsPerPage","totalItems","indexOfLastItem","min","indexOfFirstItem","currentItems","slice","handlePageChange","id","onChange","event","target","value","selected","htmlFor","item","ReactDOM","render","document","getElementById"],"mappings":"8KASaA,EAA8B,SAAC,GAKrC,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,YACAC,EACI,EADJA,aAEMC,EAAaC,KAAKC,KAAKN,EAAQC,GAC/BM,EAA4B,IAAhBL,EACZM,EAAWN,IAAgBE,EAC3BK,EAAcC,MAAMC,KACxB,CAAEC,OAAQR,IACV,SAACS,EAAGC,GAAJ,OAAcA,EAAQ,KAexB,OACE,qBAAIC,UAAU,aAAd,UACE,oBACEA,UAAS,oBACMR,EAAY,WAAa,IAF1C,SAKE,mBACE,UAAQ,WACRQ,UAAU,YACVC,KAAK,QACL,gBAAeT,EACfU,QAxBS,WACVV,GACHJ,EAAaD,EAAc,IAiBzB,oBAUDO,EAAYS,KAAI,SAAAC,GAAU,OACzB,oBAEEJ,UAAS,oBACMb,IAAgBiB,EAAa,SAAW,IAHzD,SAME,mBACEH,KAAI,WAAMG,GACV,UAAQ,WACRJ,UAAU,YACVE,QAAS,kBAAMd,EAAagB,IAJ9B,SAMGA,KAXEA,MAeT,oBACEJ,UAAS,oBACMP,EAAW,WAAa,IAFzC,SAKE,mBACE,UAAQ,WACRO,UAAU,YACVC,KAAK,QACL,gBAAeR,EACfS,QAlDS,WACVT,GACHL,EAAaD,EAAc,IA2CzB,wBCpEFkB,ECNC,SAAoBT,EAAcU,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIZ,EAAMY,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,EDDKG,CAAW,EAAG,IACzBP,KAAI,SAAAK,GAAC,qBAAYA,MAEPG,EAAgB,WAC3B,MAAsCC,mBAAiB,GAAvD,mBAAOzB,EAAP,KAAoB0B,EAApB,KACA,EAAwCD,mBAAiB,GAAzD,mBAAOE,EAAP,KAAqBC,EAArB,KAEMC,EAAqBX,EAAMR,OAE3BoB,EAA0B3B,KAAK4B,IACnC/B,EAAc2B,EACdE,GAGIG,GAA4BhC,EAAc,GAAK2B,EAE/CM,EAAyBf,EAAMgB,MAAMF,EAAkBF,GAEvDK,EAAmB,SAAClB,GACxBS,EAAeT,IAQjB,OACE,sBAAKJ,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWb,EADX,mBACiCgC,EAAmB,EADpD,cAC2DF,EAD3D,eACiFD,EADjF,OAIA,sBAAKhB,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACRuB,GAAG,kBACHvB,UAAU,eACVwB,SAnBc,SAACC,GACvBV,GAAiBU,EAAMC,OAAOC,OAC9BL,EAAiB,IAaX,UAME,wBAAQK,MAAM,IAAd,eACA,wBAAQC,UAAQ,EAACD,MAAM,IAAvB,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBACEE,QAAQ,kBACR7B,UAAU,qBAFZ,+BAQF,cAAC,EAAD,CACEf,MAAO+B,EACP9B,QAAS4B,EACT3B,YAAaA,EACbC,aAAckC,IAEhB,6BACGF,EAAajB,KAAI,SAAA2B,GAAI,OACpB,oBAAe,UAAQ,OAAvB,SAA+BA,GAAtBA,YErEnBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,U","file":"static/js/main.e60d635b.chunk.js","sourcesContent":["import React from 'react';\n\ninterface Props {\n  total: number;\n  perPage: number;\n  currentPage: number;\n  onPageChange: (page: number) => void;\n}\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}) => {\n  const totalPages = Math.ceil(total / perPage);\n  const firstPage = currentPage === 1;\n  const lastPage = currentPage === totalPages;\n  const pageNumbers = Array.from(\n    { length: totalPages },\n    (_, index) => index + 1,\n  );\n\n  const prevPage = () => {\n    if (!firstPage) {\n      onPageChange(currentPage - 1);\n    }\n  };\n\n  const nextPage = () => {\n    if (!lastPage) {\n      onPageChange(currentPage + 1);\n    }\n  };\n\n  return (\n    <ul className=\"pagination\">\n      <li\n        className={\n          `page-item ${firstPage ? 'disabled' : ''}`\n        }\n      >\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={firstPage}\n          onClick={prevPage}\n        >\n          «\n        </a>\n      </li>\n      {pageNumbers.map(pageNumber => (\n        <li\n          key={pageNumber}\n          className={\n            `page-item ${currentPage === pageNumber ? 'active' : ''}`\n          }\n        >\n          <a\n            href={`#${pageNumber}`}\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            onClick={() => onPageChange(pageNumber)}\n          >\n            {pageNumber}\n          </a>\n        </li>\n      ))}\n      <li\n        className={\n          `page-item ${lastPage ? 'disabled' : ''}`\n        }\n      >\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={lastPage}\n          onClick={nextPage}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { ChangeEvent, useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [currentPage, setCurrentPage] = useState<number>(1);\n  const [itemsPerPage, setItemsPerPage] = useState<number>(5);\n\n  const totalItems: number = items.length;\n\n  const indexOfLastItem: number = Math.min(\n    currentPage * itemsPerPage,\n    totalItems,\n  );\n\n  const indexOfFirstItem: number = (currentPage - 1) * itemsPerPage;\n\n  const currentItems: string[] = items.slice(indexOfFirstItem, indexOfLastItem);\n\n  const handlePageChange = (pageNumber: number) => {\n    setCurrentPage(pageNumber);\n  };\n\n  const setPerPageCount = (event: ChangeEvent<HTMLSelectElement>) => {\n    setItemsPerPage(+event.target.value);\n    handlePageChange(1);\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${indexOfFirstItem + 1} - ${indexOfLastItem} of ${totalItems})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            onChange={setPerPageCount}\n          >\n            <option value=\"3\">3</option>\n            <option selected value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label\n          htmlFor=\"perPageSelector\"\n          className=\"col-form-label col\"\n        >\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={totalItems}\n        perPage={itemsPerPage}\n        currentPage={currentPage}\n        onPageChange={handlePageChange}\n      />\n      <ul>\n        {currentItems.map(item => (\n          <li key={item} data-cy=\"item\">{item}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}